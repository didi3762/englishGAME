{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/board/board.component.ts","webpack:///src/app/comps/board/board.component.html","webpack:///src/app/comps/header/header.component.ts","webpack:///src/app/comps/header/header.component.html","webpack:///src/app/comps/mainboard/mainboard.component.ts","webpack:///src/app/comps/mainboard/mainboard.component.html","webpack:///src/app/comps/result/result.component.ts","webpack:///src/app/comps/result/result.component.html","webpack:///src/app/directives/random.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","BoardComponent","wordHeb","wordRand","englishWords","HeaderComponent","wordEng","wordsArr","MainboardComponent","word","wordEngM","resTexM","sum","HebWords","event","HebIndex","indexOf","engIndex","console","log","toString","addRand","ResultComponent","RandomDirective","elRef","getWord","getRandInit","getRand","randArr","el","nativeElement","rand","emit","i","length","Math","floor","random","arrLange","rand4","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'memoriGame';\r\n}\r\n","<mainboard></mainboard>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ResultComponent } from './comps/result/result.component';\r\nimport { BoardComponent } from './comps/board/board.component';\r\nimport { MainboardComponent } from './comps/mainboard/mainboard.component';\r\nimport { HeaderComponent } from './comps/header/header.component';\r\nimport { RandomDirective } from './directives/random.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ResultComponent,\r\n    BoardComponent,\r\n    MainboardComponent,\r\n    HeaderComponent,\r\n    RandomDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n\r\n  @Input() wordHeb:string = ''\r\n  @Input() wordRand:string = ''\r\n  @Input() arrLange:number \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  englishWords = [\r\n    'red','day','sky','week','flower', 'sun', 'moon', 'bread', 'color', 'wine'\r\n  ]\r\n\r\n}\r\n","\r\n<div  id=design >\r\n  <div id=rotatedBorder>\r\n    <span >{{wordHeb}}</span>\r\n  </div>\r\n\r\n  </div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() wordEng:string = \"ssss\"\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  wordsArr = [\r\n    \"אדום\", \"פרח\",\"שמש\",\"ירח\",\"שבוע\",\"צבע\",\"שמיים\",\"יין\",\"לחם\",\"יום\"\r\n  ]\r\n\r\n \r\n\r\n}\r\n","<div  id=design>\r\n    <div id=rotatedBorder><span >{{wordEng}}</span></div>\r\n  \r\n    </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mainboard',\r\n  templateUrl: './mainboard.component.html',\r\n  styleUrls: ['./mainboard.component.css']\r\n})\r\nexport class MainboardComponent implements OnInit {\r\n\r\n  word:string = ''\r\n  wordEngM:string = ''\r\n  resTexM:string = 'sss'\r\n  sum:number = 0\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  wordsArr:string[] = [ '','','','' ]\r\n\r\n  HebWords = [\r\n    \"אדום\", \"יום\",\"שמיים\",\"שבוע\",\"פרח\",\"שמש\",\"ירח\",\"לחם\",\"צבע\", \"יין\"\r\n  ]\r\n\r\n  englishWords = [\r\n    'red','day','sky','week','flower', 'sun', 'moon', 'bread', 'color', 'wine'\r\n  ]\r\n\r\n  addRand(event){\r\n    let HebIndex = this.HebWords.indexOf(this.word)\r\n    let engIndex = this.englishWords.indexOf(this.wordEngM)\r\n    if(HebIndex == engIndex){\r\n        this.sum++\r\n    }else{\r\n      this.sum--\r\n    }\r\n    console.log(event,this.wordsArr,this.wordEngM , this.word, HebIndex ,engIndex);\r\n    this.wordEngM = this.englishWords[event[0]]\r\n    this.wordsArr[0] = this.HebWords[event[1]];\r\n    this.wordsArr[1] = this.HebWords[event[2]];\r\n    this.wordsArr[2] = this.HebWords[event[3]];\r\n    this.wordsArr[3] = this.HebWords[event[4]];\r\n    this.wordsArr[event[5]] = this.HebWords[event[0]]\r\n    this.resTexM = this.sum.toString()\r\n  \r\n   \r\n  }\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","<div class=\"home\">\r\n    <header Random [arrLange]='englishWords.length' (getRandInit)=\"addRand($event)\" (getRand)=\"addRand($event)\"  [wordEng]=\"wordEngM\" ></header>\r\n    <div class=\"board\">\r\n        <board Random [arrLange]='englishWords.length' (getRand)=\"addRand($event)\"  (getWord)=\"word = $event\"  *ngFor='let x of wordsArr' [wordHeb]='x' ></board>\r\n    </div>\r\n    <result Random [resTex]=resTexM></result>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css']\r\n})\r\nexport class ResultComponent implements OnInit {\r\n\r\n  @Input() resTex:string\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=design>\r\n    <div id=rotatedBorder><span id=\"sum\">{{resTex}}</span></div>\r\n</div>\r\n","import { Directive, ElementRef, HostListener, Output, EventEmitter, Input, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[Random]'\r\n})\r\nexport class RandomDirective implements OnInit {\r\n\r\n  el:HTMLElement;\r\n  sum:number = 0;\r\n  @Input() wordHeb:string = ''\r\n  @Input() arrLange:number\r\n  @Output() getWord = new EventEmitter<string>()\r\n  @Output() getRandInit = new EventEmitter<number[]>()\r\n  @Output() getRand = new EventEmitter<number[]>()\r\n  @HostListener('click')    rnd() {\r\n    console.log('clicked');\r\n       \r\n       this.rand()\r\n       this.getWord.emit(this.wordHeb)\r\n       this.getRand.emit(this.randArr);\r\n       \r\n  }\r\n\r\n  randArr:number[] = [1,2,3,4,5,6]\r\n\r\n  rand(){\r\n    for (let i = 0; i < this.randArr.length; i++) {\r\n      let rand = Math.floor(Math.random() * Math.floor(this.arrLange));\r\n      this.randArr[i]= rand;\r\n    }\r\n    let rand4 = Math.floor(Math.random() * Math.floor(4));\r\n    this.randArr[5] = rand4;\r\n }\r\n\r\n\r\n  constructor(private elRef:ElementRef) { \r\n    this.el = elRef.nativeElement;\r\n    \r\n    \r\n  }\r\n  ngOnInit(): void {\r\n    \r\n      this.rand()\r\n    \r\n    this.getRandInit.emit(this.randArr)\r\n   \r\n  }\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}