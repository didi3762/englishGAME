{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/board/board.component.ts","webpack:///src/app/comps/board/board.component.html","webpack:///src/app/comps/header/header.component.ts","webpack:///src/app/comps/header/header.component.html","webpack:///src/app/comps/mainboard/mainboard.component.ts","webpack:///src/app/comps/mainboard/mainboard.component.html","webpack:///src/app/comps/result/result.component.ts","webpack:///src/app/comps/result/result.component.html","webpack:///src/app/directives/random.directive.ts","webpack:///src/app/services/my-dbservice.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","BoardComponent","wordsSVC","wordHeb","wordRand","HeaderComponent","wordsSV","wordEng","MainboardComponent","word","wordEngM","resTexM","sum","HebWords","englishWords","rand","wordsArr","event","HebIndex","indexOf","engIndex","console","log","toString","addRand","ResultComponent","RandomDirective","elRef","getHebWords","getenglishWords","getWord","getRandInit","getRand","randArr","el","nativeElement","emit","i","length","Math","floor","random","rand4","httpGet","urlsJeson","jsonA","subscribe","strResult","MyDBserviceService","myHttp","API_KEY","url","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'englishGame';\r\n}\r\n","<mainboard ></mainboard>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule} from '@angular/common/http'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ResultComponent } from './comps/result/result.component';\r\nimport { BoardComponent } from './comps/board/board.component';\r\nimport { MainboardComponent } from './comps/mainboard/mainboard.component';\r\nimport { HeaderComponent } from './comps/header/header.component';\r\nimport { RandomDirective } from './directives/random.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ResultComponent,\r\n    BoardComponent,\r\n    MainboardComponent,\r\n    HeaderComponent,\r\n    RandomDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyDBserviceService } from 'src/app/services/my-dbservice.service';\r\n\r\n@Component({\r\n  selector: 'board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n\r\n  @Input() wordHeb:string = ''\r\n  @Input() wordRand:string = ''\r\n  @Input() arrLange:number \r\n\r\n  constructor(public wordsSVC:MyDBserviceService) { \r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div  id=design >\r\n  <div id=rotatedBorder>\r\n    <span id=\"word\" >{{wordHeb}}</span>\r\n  </div>\r\n\r\n  </div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyDBserviceService } from 'src/app/services/my-dbservice.service';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() wordEng:string = \"\"\r\n  \r\n\r\n  constructor(private wordsSV:MyDBserviceService) {\r\n     \r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n \r\n\r\n}\r\n","<div  id=design>\r\n    <div id=rotatedBorder wordEng=\"wordsSV.wordHeb\"><span id=\"header\">{{wordEng}}</span></div>\r\n  \r\n    </div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyDBserviceService } from 'src/app/services/my-dbservice.service';\r\n\r\n@Component({\r\n  selector: 'mainboard',\r\n  templateUrl: './mainboard.component.html',\r\n  styleUrls: ['./mainboard.component.css']\r\n})\r\nexport class MainboardComponent implements OnInit {\r\n\r\n  word:string = ''\r\n  wordEngM:string = ''\r\n  resTexM:string = '0'\r\n  sum:number = 0\r\n  HebWords:string[] = []\r\n  englishWords:string[] = []\r\n  @Input() rand:number[]= []\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  wordsArr:string[] = [ '','','','' ];\r\n\r\n\r\n  \r\n\r\n  addRand(event){\r\n    let HebIndex = this.HebWords.indexOf(this.word)\r\n    let engIndex = this.englishWords.indexOf(this.wordEngM)\r\n    if(this.wordEngM==''||this.wordEngM==null){\r\n      console.log(this.sum);\r\n      this.sum = 0\r\n    }\r\n    else if(HebIndex == engIndex){\r\n        this.sum++\r\n        console.log(this.sum);\r\n    }else{\r\n      console.log(this.sum);\r\n      this.sum--\r\n    }\r\n    this.wordEngM = this.englishWords[event[0]]\r\n    this.wordsArr[0] = this.HebWords[event[1]];\r\n    this.wordsArr[1] = this.HebWords[event[2]];\r\n    this.wordsArr[2] = this.HebWords[event[3]];\r\n    this.wordsArr[3] = this.HebWords[event[4]];\r\n    this.wordsArr[event[5]] = this.HebWords[event[0]]\r\n    this.resTexM = this.sum.toString()\r\n\r\n }\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","<div class=\"home\">\r\n    <header Random (getenglishWords)=\"englishWords = $event\" (getHebWords)=\"HebWords = $event\" (getRandInit)=\"addRand($event)\"  [wordEng]=\"wordEngM\" ></header>\r\n    <div class=\"board\">\r\n        <board Random  (getRand)=\"addRand($event)\"  (getWord)=\"word = $event\"  *ngFor='let x of wordsArr' [wordHeb]='x' ></board>\r\n    </div>\r\n    <result Random [resTex]=resTexM></result>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css']\r\n})\r\nexport class ResultComponent implements OnInit {\r\n\r\n  @Input() resTex:string\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=design>\r\n    <div id=rotatedBorder><span id=\"sum\">{{resTex}}</span></div>\r\n</div>\r\n","import { Directive, ElementRef, HostListener, Output, EventEmitter, Input, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { MyDBserviceService } from '../services/my-dbservice.service';\r\n\r\n@Directive({\r\n  selector: '[Random]'\r\n})\r\nexport class RandomDirective implements OnInit{\r\n\r\n  el:HTMLElement;\r\n  sum:number = 0;\r\n  @Input() HebWords:string[] = []\r\n  @Input() englishWords:string[] = []\r\n\r\n  @Input() wordHeb:string = ''\r\n  @Input() arrLange:number\r\n\r\n  @Output() getHebWords = new EventEmitter<string[]>()\r\n  @Output() getenglishWords = new EventEmitter<string[]>()\r\n  @Output() getWord = new EventEmitter<string>()\r\n  @Output() getRandInit = new EventEmitter<number[]>()\r\n  @Output() getRand = new EventEmitter<number[]>()\r\n  \r\n  @HostListener('click')    rnd() {\r\n    console.log('clicked');\r\n       \r\n       this.rand()\r\n       this.getWord.emit(this.wordHeb)\r\n       this.getRand.emit(this.randArr);\r\n       \r\n  }\r\n\r\n  randArr:number[] = [1,2,3,4,5,6]\r\n\r\n  rand(){\r\n    for (let i = 0; i < this.randArr.length; i++) {\r\n      let rand = Math.floor(Math.random() * Math.floor(40));\r\n      this.randArr[i]= rand;\r\n    }\r\n    let rand4 = Math.floor(Math.random() * Math.floor(4));\r\n    this.randArr[5] = rand4;\r\n }\r\n\r\n\r\n  constructor(private elRef:ElementRef,private wordsSV:MyDBserviceService) { \r\n    this.el = elRef.nativeElement;\r\n  }\r\n \r\n \r\n  ngOnInit(): void {\r\n      console.log(\"init\");\r\n\r\n      this.wordsSV.httpGet(this.wordsSV.urlsJeson.jsonA)\r\n      .subscribe(strResult => {\r\n        this.HebWords = strResult['coloros']['HebWords']\r\n        this.englishWords = strResult['coloros']['englishWords']\r\n        console.log(this.englishWords);\r\n\r\n   \r\n\r\n    this.getHebWords.emit(this.HebWords)\r\n    this.getenglishWords.emit(this.englishWords)\r\n    this.rand()\r\n    this.getRandInit.emit(this.randArr)\r\n    \r\n       })\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n// ng build --output-path docs --base-href https://bresleveloper.github.io/techingAvratech7NG/\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { from } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyDBserviceService {\r\n\r\n  public urlsJeson = {\r\n    jsonA:\"https://raw.githubusercontent.com/didi3762/ajax/master/ajax4.json\",\r\n  }\r\n\r\n  constructor(private myHttp:HttpClient) { }\r\n\r\n  httpGet(url:string) :Observable<string>{\r\n    return this.myHttp.get<string>(url)\r\n  }\r\n\r\n\r\n\r\n  HebWords:string[] = []\r\n  englishWords:string[] = []\r\n  wordHeb:string\r\n  API_KEY = 'a0e86e494bmsh4d89c361a8749e8p1e76acjsnc912453b36d7';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}