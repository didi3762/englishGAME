{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comps/board/board.component.ts","./src/app/comps/board/board.component.html","./src/app/comps/header/header.component.ts","./src/app/comps/header/header.component.html","./src/app/comps/mainboard/mainboard.component.ts","./src/app/comps/mainboard/mainboard.component.html","./src/app/comps/result/result.component.ts","./src/app/comps/result/result.component.html","./src/app/directives/random.directive.ts","./src/app/services/my-dbservice.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'englishGame';\r\n}\r\n","<mainboard ></mainboard>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule} from '@angular/common/http'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ResultComponent } from './comps/result/result.component';\r\nimport { BoardComponent } from './comps/board/board.component';\r\nimport { MainboardComponent } from './comps/mainboard/mainboard.component';\r\nimport { HeaderComponent } from './comps/header/header.component';\r\nimport { RandomDirective } from './directives/random.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ResultComponent,\r\n    BoardComponent,\r\n    MainboardComponent,\r\n    HeaderComponent,\r\n    RandomDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule, HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyDBserviceService } from 'src/app/services/my-dbservice.service';\r\n\r\n@Component({\r\n  selector: 'board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n\r\n  @Input() wordHeb:string = ''\r\n  @Input() wordRand:string = ''\r\n  @Input() arrLange:number \r\n\r\n  constructor(public wordsSVC:MyDBserviceService) { \r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div  id=design >\r\n  <div id=rotatedBorder>\r\n    <span id=\"word\" >{{wordHeb}}</span>\r\n  </div>\r\n\r\n  </div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyDBserviceService } from 'src/app/services/my-dbservice.service';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() wordEng:string = \"\"\r\n  \r\n\r\n  constructor(private wordsSV:MyDBserviceService) {\r\n     \r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n \r\n\r\n}\r\n","<div  id=design>\r\n    <div id=rotatedBorder wordEng=\"wordsSV.wordHeb\"><span id=\"header\">{{wordEng}}</span></div>\r\n  \r\n    </div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyDBserviceService } from 'src/app/services/my-dbservice.service';\r\n\r\n@Component({\r\n  selector: 'mainboard',\r\n  templateUrl: './mainboard.component.html',\r\n  styleUrls: ['./mainboard.component.css']\r\n})\r\nexport class MainboardComponent implements OnInit {\r\n\r\n  word:string = ''\r\n  wordEngM:string = ''\r\n  resTexM:string = '0'\r\n  sum:number = 0\r\n  HebWords:string[] = []\r\n  englishWords:string[] = []\r\n  @Input() rand:number[]= []\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  wordsArr:string[] = [ '','','','' ];\r\n\r\n\r\n  \r\n\r\n  addRand(event){\r\n    let HebIndex = this.HebWords.indexOf(this.word)\r\n    let engIndex = this.englishWords.indexOf(this.wordEngM)\r\n    if(this.wordEngM==''||this.wordEngM==null){\r\n      console.log(this.sum);\r\n      this.sum = 0\r\n    }\r\n    else if(HebIndex == engIndex){\r\n        this.sum++\r\n        console.log(this.sum);\r\n    }else{\r\n      console.log(this.sum);\r\n      this.sum--\r\n    }\r\n    this.wordEngM = this.englishWords[event[0]]\r\n    this.wordsArr[0] = this.HebWords[event[1]];\r\n    this.wordsArr[1] = this.HebWords[event[2]];\r\n    this.wordsArr[2] = this.HebWords[event[3]];\r\n    this.wordsArr[3] = this.HebWords[event[4]];\r\n    this.wordsArr[event[5]] = this.HebWords[event[0]]\r\n    this.resTexM = this.sum.toString()\r\n\r\n }\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","<div class=\"home\">\r\n    <header Random (getenglishWords)=\"englishWords = $event\" (getHebWords)=\"HebWords = $event\" (getRandInit)=\"addRand($event)\"  [wordEng]=\"wordEngM\" ></header>\r\n    <div class=\"board\">\r\n        <board Random  (getRand)=\"addRand($event)\"  (getWord)=\"word = $event\"  *ngFor='let x of wordsArr' [wordHeb]='x' ></board>\r\n    </div>\r\n    <result Random [resTex]=resTexM></result>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'result',\r\n  templateUrl: './result.component.html',\r\n  styleUrls: ['./result.component.css']\r\n})\r\nexport class ResultComponent implements OnInit {\r\n\r\n  @Input() resTex:string\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=design>\r\n    <div id=rotatedBorder><span id=\"sum\">{{resTex}}</span></div>\r\n</div>\r\n","import { Directive, ElementRef, HostListener, Output, EventEmitter, Input, OnInit, AfterViewChecked } from '@angular/core';\r\nimport { MyDBserviceService } from '../services/my-dbservice.service';\r\n\r\n@Directive({\r\n  selector: '[Random]'\r\n})\r\nexport class RandomDirective implements OnInit{\r\n\r\n  el:HTMLElement;\r\n  sum:number = 0;\r\n  @Input() HebWords:string[] = []\r\n  @Input() englishWords:string[] = []\r\n\r\n  @Input() wordHeb:string = ''\r\n  @Input() arrLange:number\r\n\r\n  @Output() getHebWords = new EventEmitter<string[]>()\r\n  @Output() getenglishWords = new EventEmitter<string[]>()\r\n  @Output() getWord = new EventEmitter<string>()\r\n  @Output() getRandInit = new EventEmitter<number[]>()\r\n  @Output() getRand = new EventEmitter<number[]>()\r\n  \r\n  @HostListener('click')    rnd() {\r\n    console.log('clicked');\r\n       \r\n       this.rand()\r\n       this.getWord.emit(this.wordHeb)\r\n       this.getRand.emit(this.randArr);\r\n       \r\n  }\r\n\r\n  randArr:number[] = [1,2,3,4,5,6]\r\n\r\n  rand(){\r\n    for (let i = 0; i < this.randArr.length; i++) {\r\n      let rand = Math.floor(Math.random() * Math.floor(40));\r\n      this.randArr[i]= rand;\r\n    }\r\n    let rand4 = Math.floor(Math.random() * Math.floor(4));\r\n    this.randArr[5] = rand4;\r\n }\r\n\r\n\r\n  constructor(private elRef:ElementRef,private wordsSV:MyDBserviceService) { \r\n    this.el = elRef.nativeElement;\r\n  }\r\n \r\n \r\n  ngOnInit(): void {\r\n      console.log(\"init\");\r\n\r\n      this.wordsSV.httpGet(this.wordsSV.urlsJeson.jsonA)\r\n      .subscribe(strResult => {\r\n        this.HebWords = strResult['coloros']['HebWords']\r\n        this.englishWords = strResult['coloros']['englishWords']\r\n        console.log(this.englishWords);\r\n\r\n   \r\n\r\n    this.getHebWords.emit(this.HebWords)\r\n    this.getenglishWords.emit(this.englishWords)\r\n    this.rand()\r\n    this.getRandInit.emit(this.randArr)\r\n    \r\n       })\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n// ng build --output-path docs --base-href https://bresleveloper.github.io/techingAvratech7NG/\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { from } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyDBserviceService {\r\n\r\n  public urlsJeson = {\r\n    jsonA:\"https://raw.githubusercontent.com/didi3762/ajax/master/ajax4.json\",\r\n  }\r\n\r\n  constructor(private myHttp:HttpClient) { }\r\n\r\n  httpGet(url:string) :Observable<string>{\r\n    return this.myHttp.get<string>(url)\r\n  }\r\n\r\n\r\n\r\n  HebWords:string[] = []\r\n  englishWords:string[] = []\r\n  wordHeb:string\r\n  API_KEY = 'a0e86e494bmsh4d89c361a8749e8p1e76acjsnc912453b36d7';\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}